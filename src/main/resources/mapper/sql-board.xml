<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper : 인터페이스 BoardMapper 을 구현함 -->
<!-- namespace에 지정된 인터페이스를 구현함 -->
<mapper namespace="board.mapper.BoardMapper">
<!-- <select>, <update>, <delete>, <insert> 는 sql 쿼리문을 구현 -->
<!-- id : mapper에서 namespace로 지정한 interface에서 구현해야하는 메서드명을 뜻함 -->
<!-- resultType : 구현한 메서드를 통하여 반환할 데이터 타입 -->
	<select id="selectBoardList" parameterType="Criteria" resultType="board.dto.BoardDto">
		<![CDATA[
			SELECT
				board_idx,
				title,
				hit_cnt,
				DATE_FORMAT(created_datetime, '%Y.%m.%d %H:%i:%s') AS created_datetime
			FROM
				t_board
			WHERE
				deleted_yn = 'N'
			ORDER BY board_idx DESC
			LIMIT
				#{paginationInfo.firstRecordIndex}, #{recordsPerPage}
			
		]]>
	</select>
	<select id="selectBoardTotalCount" parameterType="Criteria" resultType="int">
		<![CDATA[
			SELECT
				COUNT(*)
			FROM
				t_board
			WHERE
				deleted_yn = 'N'
		]]>
	</select>
	
	<!-- parameterType : sql 쿼리 사용 시 필요한 파라미터의 데이터 타입 설정 -->
	<select id="selectBoardDetail" parameterType="int" resultType="board.dto.BoardDto">
		<![CDATA[
			SELECT
				board_idx,
				title,
				contents,
				hit_cnt,
				DATE_FORMAT(created_datetime, '%Y.%m.%d %H:%i:%s') AS created_datetime,
				created_id
			FROM
				t_board
			WHERE
				board_idx = #{boardIdx}
			AND
				deleted_yn = 'N'
		]]>
	</select>
	
	<update id="updateHitCount" parameterType="int">
		<![CDATA[
			UPDATE
				t_board
			SET
				hit_cnt = hit_cnt + 1
			WHERE
				board_idx = #{boardIdx}
		]]>
	</update>
	
	<!-- xml에서 sql 쿼리문을 입력 시 반드시 실제 데이터 베이스의 컬럼명을 사용 -->
	<!-- 사용자의 정보가 입력되는 부분은 dto 클래스에서 선언한 멤버변수명을 사용 -->
	<!-- Mapper 파일에 매개변수로 넘어온 매개변수명을 사용해야 함 -->
	<insert id="insertBoard" parameterType="board.dto.BoardDto" useGeneratedKeys="true" keyProperty="boardIdx">
		<![CDATA[
			INSERT INTO t_board
				(title, contents, created_id, created_datetime)
			VALUES
				(#{title}, #{contents}, #{createdId}, NOW())
		]]>
	</insert>
	<!-- 파일 정보 추가하기 -->
	<insert id="insertBoardFileList" parameterType="board.dto.BoardFileDto">
		<![CDATA[
			
			INSERT INTO t_file 
				(board_idx, original_file_name, stored_file_path, file_size, created_id, created_datetime)
 			VALUES
		]]>
		<!-- 업로드된 파일은 여러개이기 때문에 mybatis의 foreach문을 사용하여 반복 수행 -->
		<!--collection은 mapper 파일에서 넘겨받은 변수명을 사용(데이터 타입은 List, array-->
		<!-- item 속성은 foreach 문 내에서 내용할 매개변수의 별칭-->
		<!-- separator 속성은 반복되는 문자열을 구분하기 위해 사용-->
		<foreach collection="list" item="item" separator=",">
			(
				#{item.boardIdx}, 
				#{item.originalFileName},
				#{item.storedFilePath},
				#{item.fileSize}, 
				'admin',
				NOW()
			)
		</foreach>
	</insert>
	<!-- 파일 목록 확인하기 -->
	<select id="selectBoardFileList" parameterType="int" resultType="board.dto.BoardFileDto">
		<![CDATA[
			SELECT 
				idx, board_idx, original_file_name, stored_file_path,
				FORMAT(ROUND(file_size/1024), 0) AS file_size 
			FROM 
				t_file 
			WHERE 
				board_idx = #{boardIdx}
			AND 
				deleted_yn = 'N'
		]]>
	</select>
	<!-- 게시글 수정하기 -->
	<update id="updateBoard" parameterType="board.dto.BoardDto">
		<![CDATA[
			UPDATE
				t_board
			SET
				title = #{title}, contents = #{contents}
			WHERE
				board_idx = #{boardIdx}
		]]>
	</update>
	
	<!--<delete id="deleteBoard" parameterType="int">
		<![CDATA[ 
			DELETE
			FROM
				t_board
			WHERE
				board_idx = #{boardIdx}
		]]>
	</delete>-->
	
	<update id="deleteBoard" parameterType="int">
		<![CDATA[
			UPDATE
				t_board
			SET
				deleted_yn = 'Y'
			WHERE
				board_idx = #{boardIdx}
		]]>
	</update>
</mapper>








